apply plugin: 'com.android.library'

//apply plugin: 'com.novoda.bintray-release'//添加

//publish{
//    userOrg = 'hui793114465'//bintray.com的用户名
//    repoName = 'yiciyuan'//远程仓库名字,不指明，默认是上传到maven
//    groupId = 'com.yiciyuan'//一个唯一值，默认包名,生成的gradle依赖前缀
//    artifactId = 'kernel'//远程仓库包名称
//    publishVersion = '1.0.0'//版本号
//    desc = 'This is a simple custom tab library for Android'//描述，不重要
//    website = 'https://github.com/KouChengjian/androidx_utlis'//引用github主页
//}
//
//tasks.withType(Javadoc) {//防止编码问题
//    options.addStringOption('Xdoclint:none', '-quiet')
//    options.addStringOption('encoding', 'UTF-8')
//    options.addStringOption('charSet', 'UTF-8')
//}

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //添加配置
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you `can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    api project(':library-annotation')

    def androidDependencies = rootProject.ext.androidDependencies
    api androidDependencies.appcompat
    api androidDependencies.recyclerview

//    def httpDependencies = rootProject.ext.httpDependencies
//    api httpDependencies.okhttp3
//    api httpDependencies.okhttp3_logging
//    api httpDependencies.retrofit2
//    api httpDependencies.retrofit2_gson
//    api httpDependencies.retrofit2_adapter
//    api httpDependencies.rxjava
//    api httpDependencies.rxandroid
//    api httpDependencies.rxlifecycle

    def toolDependencies = rootProject.ext.toolDependencies
    api toolDependencies.ycy_annotation
    api toolDependencies.butterKnife
//    api toolDependencies.dagger
//    api toolDependencies.dagger_android
//    api toolDependencies.dagger_android_support
}
