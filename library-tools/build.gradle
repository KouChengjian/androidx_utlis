apply plugin: 'com.android.library'


ext {
    PUBLISH_GROUP_ID = "io.github.kouchengjian"		//项目包名
    PUBLISH_ARTIFACT_ID = 'tools'			        //项目名
    PUBLISH_TYPE = 'android'                        // 项目类型
    PUBLISH_VERSION = '0.0.1'					    //版本号
}

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //添加配置
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you `can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def androidDependencies = rootProject.ext.androidDependencies
    api androidDependencies.appcompat
    api androidDependencies.recyclerview
    def httpDependencies = rootProject.ext.httpDependencies
    api httpDependencies.okhttp3
    def toolDependencies = rootProject.ext.toolDependencies
    api toolDependencies.glide
    annotationProcessor toolDependencies.glide_compiler
    def uiDependencies = rootProject.ext.uiDependencies
    api uiDependencies.refresh_core
    api uiDependencies.refresh_footer
    api uiDependencies.refresh_header
}

//allprojects {
//    plugins.withId("com.vanniktech.maven.publish") {
//        mavenPublish {
//            sonatypeHost = "S01"
//        }
//    }
//}

apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"