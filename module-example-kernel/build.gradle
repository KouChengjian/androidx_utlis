apply plugin: 'com.android.application'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId globalConfiguration.getAt("androidApplicationId")
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            keyAlias 'test001'
            keyPassword '>-&f3Bz03g'
            storeFile file('../release/example.jks')
            storePassword '9sQN#k-KS?'
        }
        release {
            keyAlias 'test001'
            keyPassword '>-&f3Bz03g'
            storeFile file('../release/example.jks')
            storePassword '9sQN#k-KS?'
        }
    }

    buildTypes {
        debug {
//            applicationIdSuffix ".kernel"
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }

    lintOptions {
        //即使有lint报错也不停止打包
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'], exclude: '*.bak')

//    implementation project(':library-annotation')
//    implementation project(':library-kernel')
    annotationProcessor project(':library-apt')

    def httpDependencies = rootProject.ext.httpDependencies
    implementation httpDependencies.okhttp3
    implementation httpDependencies.okhttp3_logging
    implementation httpDependencies.retrofit2
    implementation httpDependencies.retrofit2_gson
    implementation httpDependencies.retrofit2_adapter
    implementation httpDependencies.rxjava
    implementation httpDependencies.rxandroid
    implementation httpDependencies.rxlifecycle

    def toolDependencies = rootProject.ext.toolDependencies
    implementation toolDependencies.ycy_kernel
    implementation toolDependencies.ycy_annotation
//    annotationProcessor toolDependencies.ycy_apt
}
