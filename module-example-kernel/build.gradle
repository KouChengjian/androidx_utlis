apply plugin: 'com.android.application'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        applicationId globalConfiguration.getAt("androidApplicationId")
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            keyAlias 'test001'
            keyPassword '>-&f3Bz03g'
            storeFile file('../release/example.jks')
            storePassword '9sQN#k-KS?'
        }
        release {
            keyAlias 'test001'
            keyPassword '>-&f3Bz03g'
            storeFile file('../release/example.jks')
            storePassword '9sQN#k-KS?'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".kernel"
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':library-kernel')
//    def androidDependencies = rootProject.ext.androidDependencies
//    implementation androidDependencies.appcompat
//    implementation androidDependencies.material
//    implementation androidDependencies.constraintlayout
//
//    def httpDependencies = rootProject.ext.httpDependencies
//    implementation httpDependencies.okhttp3
//
//    def toolDependencies = rootProject.ext.toolDependencies
//    implementation toolDependencies.glide
//    annotationProcessor toolDependencies.glide_compiler
//
//    def uiDependencies = rootProject.ext.uiDependencies
//    implementation uiDependencies.refresh_core
//    implementation uiDependencies.refresh_footer
//    implementation uiDependencies.refresh_header
}
